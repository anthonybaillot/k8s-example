apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.database.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "k8s-example.database.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.database.replicas }}
  selector:
    matchLabels:
      {{- include "k8s-example.database.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-example.database.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.database.service.targetPort }}
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          {{- toYaml .Values.database.resources | nindent 10 }}
      volumes:
      - name: postgres-storage
        emptyDir: {}